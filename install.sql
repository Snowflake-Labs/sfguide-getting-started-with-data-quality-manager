CREATE DATABASE DATA_QUALITY;
CREATE SCHEMA DATA_QUALITY.CONFIG;
CREATE SCHEMA DATA_QUALITY.RESULTS;
CREATE SCHEMA DATA_QUALITY.TEMPORARY_DQ_OBJECTS;

create or replace TABLE DATA_QUALITY.CONFIG.DQ_CHECK_TYPES (
	CHECK_TYPE_ID NUMBER(38,0),
	CHECK_DESCRIPTION VARCHAR(200),
	CHECK_CATEGORY VARCHAR(200),
	COMPARES VARCHAR(200)
);

CREATE SEQUENCE DATA_QUALITY.CONFIG.DQ_JOB_ID_SEQUENCE;
create or replace TABLE DATA_QUALITY.CONFIG.DQ_JOBS (
	JOB_ID NUMBER(38,0) DEFAULT DATA_QUALITY.CONFIG.DQ_JOB_ID_SEQUENCE.NEXTVAL,
	JOB_NAME VARCHAR(500),
	CREATE_DTTM TIMESTAMP_NTZ(9),
	CREATE_BY VARCHAR(16777216),
	LAST_RUN TIMESTAMP_NTZ(9),
	SCHEDULE VARCHAR(50),
	JOB_SPECS VARIANT,
	LAST_UPDATED TIMESTAMP_NTZ(9),
	IS_ACTIVE BOOLEAN,
	SPROC_NAME VARCHAR(16777216),
	CHECK_CATEGORY VARCHAR(200),
	LABEL VARCHAR(16777216)
);

create or replace TABLE DATA_QUALITY.RESULTS.DQ_SNOWFLAKE_DMF_RESULTS (
	JOB_ID NUMBER(38,0),
	RUN_DATETIME TIMESTAMP_NTZ(9),
	RESULTS VARIANT,
	ALERT_FLAG BOOLEAN,
	ALERT_STATUS VARCHAR(16777216),
	COMMENTS VARCHAR(16777216)
);

create or replace TABLE DATA_QUALITY.RESULTS.DQ_ANOMALY_DETECT_RESULTS (
	JOB_ID NUMBER(38,0),
	RUN_DATETIME TIMESTAMP_NTZ(9),
	CHECK_TYPE_ID NUMBER(38,0),
	PARTITION_VALUES ARRAY,
	CHECK_TBL_NM VARCHAR(16777216),
	RECORD_IDS VARIANT,
	ANOMALY_SCORE FLOAT,
	ALERT_FLAG NUMBER(38,0),
	ALERT_STATUS VARCHAR(200),
	COMMENTS VARCHAR(16777216)
);

create or replace TABLE DATA_QUALITY.RESULTS.DQ_NON_STAT_CHECK_RESULTS (
	JOB_ID NUMBER(38,0),
	RUN_DATETIME TIMESTAMP_NTZ(9),
	CHECK_TYPE_ID NUMBER(38,0),
	PARTITION_VALUES ARRAY,
	CONTROL_TBL_NM VARCHAR(16777216),
	COMPARE_TBL_NM VARCHAR(16777216),
	RESULTS VARIANT,
	ALERT_FLAG NUMBER(38,0),
	ALERT_STATUS VARCHAR(200),
	COMMENTS VARCHAR(16777216)
);

create or replace TABLE DATA_QUALITY.RESULTS.DQ_SNOWFLAKE_DMF_RESULTS (
	JOB_ID NUMBER(38,0),
	RUN_DATETIME TIMESTAMP_NTZ(9),
	RESULTS VARIANT,
	ALERT_FLAG BOOLEAN,
	ALERT_STATUS VARCHAR(16777216),
	COMMENTS VARCHAR(16777216)
);

CREATE OR REPLACE PROCEDURE DATA_QUALITY.CONFIG.DMF_WRAPPER(id int)
RETURNS STRING
LANGUAGE PYTHON
RUNTIME_VERSION = 3.11
HANDLER = 'dmf_wrapper'
PACKAGES = ('snowflake-snowpark-python')
AS $$
import json
import pandas as pd
def dmf_wrapper(session, id):
    sql_string = f"SELECT PARSE_JSON(JOB_SPECS) FROM DATA_QUALITY.CONFIG.DQ_JOBS WHERE JOB_ID = {id}"

    spec = session.sql(sql_string).collect()
    spec =  json.loads(spec[0][0])
    result_json={}
    for column_spec in spec["COLUMNS"]:
        column = str(column_spec["COLUMN"])
        table = spec["TABLE"]
        result_json[column] = {}
        for check in column_spec["CHECKS"]:
            check_query = f'SELECT SNOWFLAKE.CORE.{check}(SELECT {column} from {table}) as RESULT'
            result = session.sql(check_query).to_pandas()
            result_json[column][check]=result["RESULT"].values[0]
    result_json = str(result_json).replace("'",'"')
    session.sql(f"""insert into DATA_QUALITY.RESULTS.DQ_SNOWFLAKE_DMF_RESULTS(JOB_ID,RUN_DATETIME,RESULTS,ALERT_FLAG,ALERT_STATUS,COMMENTS) 
    SELECT {id},CURRENT_TIMESTAMP(),PARSE_JSON('{result_json}'),0,'CONFIRMATION_PENDING',''""").collect()
    return result_json
$$;


CREATE OR REPLACE STAGE DATA_QUALITY.CONFIG.CODE;
-- Load all files except install to stage at this point


CREATE OR REPLACE PROCEDURE DATA_QUALITY.CONFIG.DQ_ANOMALY_DETECTION_SPROC("ARG1" VARCHAR(16777216), "ARG2" OBJECT)
RETURNS OBJECT
LANGUAGE PYTHON
RUNTIME_VERSION = '3.10'
PACKAGES = ('snowflake-snowpark-python','snowflake-ml-python','pandas','scikit-learn','cloudpickle==2.2.1')
HANDLER = 'udf_py_2034220827.compute'
IMPORTS = ('@DATA_QUALITY.CONFIG.CODE/utility_functions.py','@DATA_QUALITY.CONFIG.CODE/DATA_QUALITYCONFIGdq_anomaly_detection_sproc_1183842436314279374/udf_py_2034220827.zip')
EXECUTE AS OWNER
;

CREATE OR REPLACE PROCEDURE DATA_QUALITY.CONFIG.DQ_NON_STAT_SPROC("ARG1" VARCHAR(16777216), "ARG2" OBJECT)
RETURNS OBJECT
LANGUAGE PYTHON
RUNTIME_VERSION = '3.10'
PACKAGES = ('snowflake-snowpark-python','pandas','cloudpickle==2.2.1')
HANDLER = 'udf_py_994340372.compute'
IMPORTS = ('@DATA_QUALITY.CONFIG.CODE/utility_functions_non_stat.py','@DATA_QUALITY.CONFIG.CODE/DATA_QUALITYCONFIGdq_non_stat_sproc_8775928960113803498/udf_py_994340372.zip')
EXECUTE AS OWNER
;

CREATE OR REPLACE STREAMLIT  DATA_QUALITY.CONFIG.DQ_TEST
ROOT_LOCATION = '@DATA_QUALITY.CONFIG.CODE'
MAIN_FILE = '/streamlit_app.py'
QUERY_WAREHOUSE = DEX_WH
COMMENT = 'data_quality_framework';